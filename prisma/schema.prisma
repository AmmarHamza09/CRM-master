// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}



model CalendarEvent {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  start       DateTime
  end         DateTime?
  allDay      Boolean  @default(false)
  color       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum UserRole {
  USER
  ADMIN
  CLIENT
  MEMBER
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  firstName          String
  lastName          String
  phone          String
  email         String   @unique
  emailVerified DateTime?
  image         String?
  country         String?
  location         String?
  role          UserRole  @default(USER)
  password      String?
  status Boolean @default(true)
  projects      Project[]
  invoices     Invoice[]
  payments     Payment[]
  isVerfied     Boolean   @default(false)
  token         Int?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  paymentMethods PaymentMethod[]
}

enum ProjectStatus {
  OPEN
  IN_PROGRESS
  REVIEW
  COMPLETED
  ON_HOLD
}

enum ProjectPriority {
  LOW
  MEDIUM
  HIGH
}

enum ProjectType {
  FULL_TIME
  PART_TIME
  CONTRACT
  INTERNSHIP
}

model Project {
  id          String         @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  company     String
  location    String?
  type        ProjectType    @default(FULL_TIME)
  status      ProjectStatus  @default(OPEN)
  priority    ProjectPriority @default(MEDIUM)
  budget      Float?
  client      String?
  startDate   DateTime       @default(now())
  endDate     DateTime?
  user        User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String         @db.ObjectId
  invoices    Invoice[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  @@index([userId])
}






model Invoice {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  invoiceNumber String   @unique
  amount        Float
  status        String
  dueDate       DateTime
  project       Project  @relation(fields: [projectId], references: [id])
  projectId     String   @db.ObjectId
  user          User     @relation(fields: [userId], references: [id])
  userId        String   @db.ObjectId
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Payment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  amount    Float
  date      DateTime
  method    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}



model PaymentMethod {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  type        String   // 'visa' or 'mastercard'
  last4       String
  expiryMonth String
  expiryYear  String
  isDefault   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

 